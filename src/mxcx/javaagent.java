package mxcx;

import java.io.*;
import java.lang.instrument.*;
import java.security.*;

/**
 * 
 * @author mxcx@fosec.vn
 * This Java Agent to real time replace 2 class:
 * + larry/lau/burp/ui/TestDisclaimer: I have not really understood everything in the larry's original class, so I replaced it.
 * + burp/uzd: This class stores license informations, so I replace it to extend the license and modify the license name.
 * 
 */

public class javaagent
{
    public static boolean binvalidation = true;
    //A java agent must have a premain method which acts as the entry-point
    public static void premain(String agentArgs, Instrumentation inst) throws NoSuchFieldException, IllegalAccessException, UnmodifiableClassException
    {
        inst.addTransformer(new transformer());
    }
}

class transformer implements ClassFileTransformer
{
    // xxd -p <class file> | tr -d '\n'
    String TestDisclaimerClass = "cafebabe0000003300250a0006001a08001b08001c0a001d001e07001f0700200100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c65010004746869730100224c6c617272792f6c61752f627572702f75692f54657374446973636c61696d65723b01000765786563757465010013284c6a6176612f7574696c2f4c6973743b295a010008646973636c61696d0100104c6a6176612f7574696c2f4c6973743b0100164c6f63616c5661726961626c65547970655461626c650100244c6a6176612f7574696c2f4c6973743c4c6a6176612f6c616e672f537472696e673b3e3b01000a457863657074696f6e730700210100095369676e6174757265010027284c6a6176612f7574696c2f4c6973743c4c6a6176612f6c616e672f537472696e673b3e3b295a01000a536f7572636546696c6501001354657374446973636c61696d65722e6a6176610c00070008010150546869732070726f6a656374206973204e4f5420696e74656e64656420746f207265706c61636520427572704c6f616465722e204974206a75737420455854454e445320427572704c6f616465722773206c6963656e7365210a5468616e6b206c617272795f6c6175403136332e636f6d20666f722068697320427572704c6f616465722e205468697320746f6f6c206973206261736564206f6e2069742e0a54686973206d657373616765207265706c6163657320427572704c6f61646572277320626563617573652049276d206e6f74207375726520616c6c207468696e677320696e206974732054657374446973636c61696d657220636c6173732e0a416e6420616e20696d706f7274616e74207468696e673a2022506c656173652074727920467265652065646974696f6e206f72206275792050726f2065646974696f6e20696620796f752063616e212201001e42757270556e6c696d69746564206279206d78637840666f7365632e766e0700220c002300240100206c617272792f6c61752f627572702f75692f54657374446973636c61696d65720100106a6176612f6c616e672f4f626a6563740100136a6176612f6c616e672f457863657074696f6e0100176a617661782f7377696e672f4a4f7074696f6e50616e6501001173686f774d6573736167654469616c6f6701003c284c6a6176612f6177742f436f6d706f6e656e743b4c6a6176612f6c616e672f4f626a6563743b4c6a6176612f6c616e672f537472696e673b492956002100050006000000000002000100070008000100090000002f00010001000000052ab70001b100000002000a00000006000100000005000b0000000c000100000005000c000d00000008000e000f000300090000004b000400010000000b011202120305b8000404ac00000003000a0000000a0002000000080009000d000b0000000c00010000000b00100011000000120000000c00010000000b00100013000000140000000400010015001600000002001700010018000000020019";
    String uzdClass = "cafebabe00000033006f0a001e0040090012004109001200420700430a000400400a000400440800450a000400460900120047050000e67562fe600009001200480900120049090012004a090012004b090012004c09004d004e07004f0700500700510a001400520700530a001600540a005500560a001600570a00120058090059005a07005b0a001c005c07005d010001650100124c6a6176612f6c616e672f537472696e673b0100016601000161010001680100014a01000167010001490100016301000a4c627572702f7474623b01000164010001620100063c696e69743e010058284c6a6176612f6c616e672f537472696e673b4c6a6176612f6c616e672f537472696e673b4c6a6176612f6c616e672f537472696e673b4a494c627572702f7474623b494c6a6176612f6c616e672f537472696e673b2956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c650100047468697301000a4c627572702f757a643b010031284c6a6176612f6c616e672f537472696e673b5b4c6a6176612f6c616e672f4f626a6563743b294c627572702f757a643b0100017301000561727261790100135b4c6a6176612f6c616e672f4f626a6563743b010003757a6401000d537461636b4d61705461626c6507005007003507005007005e07004f01001228294c6a6176612f7574696c2f446174653b01000a536f7572636546696c65010008757a642e6a6176610c002b005f0c001f00200c002100200100176a6176612f6c616e672f537472696e674275696c6465720c0060006101001d202d20556e6c696d69746564206279206d78637840666f7365632e766e0c006200630c002200200c002300240c002500260c002700280c002900260c002a00200700640c00210026010008627572702f757a640100106a6176612f6c616e672f537472696e6701000e6a6176612f6c616e672f4c6f6e670c006500660100116a6176612f6c616e672f496e74656765720c0067006807005e0c0069006a0c006b006c0c002b002c07006d0c0022002601000e6a6176612f7574696c2f446174650c002b006e0100106a6176612f6c616e672f4f626a656374010008627572702f747462010003282956010006617070656e6401002d284c6a6176612f6c616e672f537472696e673b294c6a6176612f6c616e672f537472696e674275696c6465723b010008746f537472696e6701001428294c6a6176612f6c616e672f537472696e673b010008627572702f6267620100096c6f6e6756616c756501000328294a010008696e7456616c756501000328294901000774797065466f7201001e284c6a6176612f6c616e672f537472696e673b294c627572702f7474623b0100087061727365496e74010015284c6a6176612f6c616e672f537472696e673b2949010008627572702f767566010004284a295600210012001e000000080011001f002000000011002100200000001100220020000000110023002400000011002500260000001100270028000000110029002600000011002a0020000000030002002b002c0001002d000000e30003000a000000452ab700012a2bb500022a2cb500032abb000459b700052db600061207b60006b60008b500092a14000ab5000c2a1506b5000d2a1907b5000e2a1508b5000f2a1909b50010b100000002002e0000002a000a000000100004001100090012000e001300250014002c00150032001600380017003e001800440019002f0000005c00090000004500300031000000000045001f0020000100000045002100200002000000450022002000030000004500230024000400000045002500260006000000450027002800070000004500290026000800000045002a002000090009002200320001002d000001a7000c000400000072b200113dbb0012592a2b0332c000132b0432c000132b0532c00014b600152b0632c00016b600172bbe07a4000c2b0732c00013a7000401b800182bbe08a4000f2b0832c00013b80019a70004032bbe1006a4000d2b100632c00013a7000401b7001a4eb2001b99000a8402011cb300112db000000003002e0000001600050000001c0004001d0063001e0069001f00700021002f0000002a000400000072003300200000000000720034003500010004006e0021002600020063000f0036003100030037000000d70007ff0036000307003807003901000708000408000407003807003a07003a0401ff0000000307003807003901000808000408000407003807003a07003a0401070038ff0014000307003807003901000808000408000407003807003a07003a040107003bff0000000307003807003901000908000408000407003807003a07003a040107003b01ff0010000307003807003901000908000408000407003807003a07003a040107003b01ff0000000307003807003901000a08000408000407003807003a07003a040107003b01070038fc001007003c00010022003d0001002d00000036000400010000000cbb001c592ab4000cb7001db000000002002e00000006000100000025002f0000000c00010000000c0030003100000001003e00000002003f";
    
    Instrumentation inst;
    
    static byte[] str2bs(final String str) throws IOException {
        final ByteArrayOutputStream baos = new ByteArrayOutputStream();
        for (int i = 0; i < str.length(); i += 2) {
            baos.write(Integer.parseInt(str.substring(i, i + 2), 16));
        }
        baos.close();
        return baos.toByteArray();
    }
    
    public void setInstrumentation(Instrumentation in){
        inst = in;
    }
    
    public byte[] transform(ClassLoader loader, String className,
            Class<?> classBeingRedefined, ProtectionDomain protectionDomain,
            byte[] classfileBuffer) throws IllegalClassFormatException {
        if (className != null) {
            if (className.startsWith("larry/lau/burp/ui/TestDisclaimer")) {
                System.out.println(className);
                try {
                   return str2bs(TestDisclaimerClass);
                } catch (IOException ex) {
                    System.out.println(transformer.class.getName());
                }
            }
            else if (className.startsWith("burp/uzd")) {
                System.out.println(className);
                try {
                    return str2bs(uzdClass);
                } catch (IOException ex) {
                    System.out.println(transformer.class.getName());
                }
            }
        }
        return classfileBuffer;
    }
 }